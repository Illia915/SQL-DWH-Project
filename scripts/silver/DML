-- print 'TRUNCATE DATA IN  silver.crm_customer_info'
TRUNCATE TABLE silver.crm_customer_info;
-- print 'Inserting Data Into: tomer_info insert into '
-- (Insert clened data) for silver.crm_customer_info
insert into  silver.crm_customer_info
(
cst_id,
cst_key,
cst_firstname,
cst_lastname,
cst_gndr,
cst_marital_status,
cst_create_date
)
select 
cst_id,
cst_key,
trim(cst_firstname) as cst_firstname,
trim(cst_lastname) as cst_lastname,
case 
    when upper(trim(cst_marital_status)) = 'S' then 'Single'
    when upper(trim(cst_marital_status)) = 'M' then 'Married'
    else 'n/a'
end cst_marital_status,
case 
    when upper(trim(cst_gndr)) = 'F' then 'Female'
    when upper(trim(cst_gndr)) = 'M' then 'Male'
    else 'n/a'
end cst_gndr,
cst_create_date
from
(
select 
*,
row_number() over(partition by cst_id order by cst_create_date desc) as flag_last
from bronze.crm_customer_info 
)t where flag_last = 1 ;


-- (Insert clened data) for silver.crm_prd_info
-- print 'TRUNCATE DATA IN  silver.crm_prd_info'
TRUNCATE TABLE silver.crm_prd_info;
-- print 'Inserting Data Into: tomer_info insert into silver.crm_prd_info '
insert into silver.crm_prd_info
(
prd_id,
cat_id,
prd_key,
prd_nm,
prd_cost,
prd_line,
prd_start_dt,
prd_end_dt
)
select
prd_id,
replace(substring(prd_key, 1,5), '-','_') as cat_id,
substring(prd_key, 7, length(prd_key)) as prd_key,
prd_nm,
COALESCE(prd_cost, 0) as prd_cost,
case upper(trim(prd_line))
    when  'M' then 'Mountain'
    when  'R' then 'Road'
    when  'S' then 'Other Sales'
    when  'T' then 'touring' 
    else 'n/a'
end as prd_line,
prd_start_dt,
lead(prd_start_dt) over(partition by prd_key order by prd_start_dt ) -1 as prd_end_dt1
from bronze.crm_prd_info ;


-- (Insert clened data) for silver.crm_sls_info
-- print 'TRUNCATE DATA IN  silver.crm_sls_info'
TRUNCATE TABLE silver.crm_sls_info;
-- print 'Inserting Data Into: tomer_info insert into silver.crm_sls_info '
insert into silver.crm_sls_info
(
    sls_ord_num,
    sls_prd_key,
    sls_cust_id,
    sls_order_dt,
    sls_ship_dt,
    sls_due_dt,
    sls_sales,
    sls_quantity,
    sls_price
)
select 
sls_ord_num,
sls_prd_key,
sls_cust_id,
case 
  when sls_order_dt = 0 or length(sls_order_dt::text) != 8 then NULL
  else cast(cast(sls_order_dt as varchar) as date)
end as sls_order_dt,
case 
  when sls_order_dt = 0 or length(sls_order_dt::text) != 8 then NULL
  else cast(cast(sls_ship_dt as varchar) as date) 
  end as sls_ship_dt,
case 
  when sls_due_dt = 0 or length(sls_due_dt::text) != 8 then NULL
  else cast(cast(sls_due_dt as varchar) as date) 
  end as sls_due_dt,
case 
  when sls_sales is null or sls_sales <= 0 or sls_sales != sls_quantity * abs(sls_price)
    then sls_quantity * abs(sls_price)
  else sls_sales
end as sls_sales,
sls_quantity,
case 
  when sls_price <= 0 or sls_price is null 
    then sls_sales / nullif(sls_quantity,0)
  else sls_price
end as sls_price
from bronze.crm_sls_info;

-- (Insert clened data) for silver.erp_cust_az12
-- print 'TRUNCATE DATA IN  silver.erp_cust_az12'
TRUNCATE TABLE silver.erp_cust_az12;
-- print 'Inserting Data Into: tomer_info insert into silver.erp_cust_az12 '
insert into silver.erp_cust_az12
(
  "CID",
  "BDATE",
  "GEN"
)
select
case 
    when "CID" like 'NAS%' THEN substring("CID", 4, length("CID"))
    else "CID"
end as "CID",
case 
    when "BDATE" > current_date then NUll
    else "BDATE"
end as "BDATE",
case 
    when trim(upper("GEN")) in ('M', 'MALE') then 'Male'
    when trim(upper("GEN")) in ('F', 'FEMALE') then 'Female'
    else 'n/a'
end as "GEN"
from bronze.erp_cust_az12;

-- (Insert clened data) for silver.erp_loc_a101
-- print 'TRUNCATE DATA IN  silver.erp_loc_a101'
TRUNCATE TABLE silver.erp_loc_a101;
-- print 'Inserting Data Into: tomer_info insert into silver.erp_loc_a101 '
insert into silver.erp_loc_a101
(
  "CID",
  "CNTRY"
)
select 
replace("CID", '-', '') as "CID",
case 
    when "CNTRY" in (' ', NUll) then 'n/a'
    when trim(upper("CNTRY")) in ('US', 'USA') then 'United States'
    when trim(upper("CNTRY")) in ('DE', 'GERMANY') then 'Germany'
    else "CNTRY"
end as "CNTRY"
from bronze.erp_loc_a101;

-- (Insert clened data) for silver.erp_px_cat_g1v2
-- print 'TRUNCATE DATA IN  silver.erp_px_cat_g1v2'
TRUNCATE TABLE silver.erp_px_cat_g1v2;
-- print 'Inserting Data Into: tomer_info insert into silver.erp_px_cat_g1v2 '
insert into silver.erp_px_cat_g1v2
(
  "ID",
  "CAT",
  "SUBCAT",
  "MAINTENANCE"
)
select
  "ID",
  "CAT",
  "SUBCAT",
  "MAINTENANCE"
from bronze.erp_px_cat_g1v2
